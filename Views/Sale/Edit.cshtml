@model StoreManagement.Models.Sale

@{
    ViewData["Title"] = "Editar Venta";
}

<h1 class="mb-3"><i class="bi bi-gear-fill pe-4"></i><strong>Editar venta</strong></h1>

<form asp-action="Edit" method="post" id="saleForm">
    <input type="hidden" asp-for="Id" />
    @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })

    <div class="row mb-3">
        <div class="col-md-6">
            <label asp-for="Date" class="form-label">Fecha</label>
            <input asp-for="Date" type="date" class="form-control" value="@Model.Date:yyyy-MM-dd" />
            <span asp-validation-for="Date" class="text-danger"></span>
        </div>
        <div class="col-md-6">
            <label asp-for="CustomerId" class="form-label">Cliente</label>
            <select asp-for="CustomerId" class="form-select" asp-items="ViewBag.CustomerId">
                <option value="">-- Seleccione un cliente --</option>
            </select>
            <span asp-validation-for="CustomerId" class="text-danger"></span>
        </div>
    </div>

    <hr class="mt-5" />
    <div class="card p-5 mb-5">
        <h2>Detalles de Venta</h2>
        <table class="table" id="detailsTable">
            <thead>
                <tr>
                    <th>Producto</th>
                    <th>Cantidad</th>
                    <th>Precio Unitario</th>
                    <th>Subtotal</th>
                    <th>
                        <button type="button" id="addDetail" class="btn btn-sm gradient-bg text-white">Agregar</button>
                    </th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.SaleDetails.Count; i++)
                {
                    <tr>
                        <td>
                            <input type="hidden" asp-for="SaleDetails[@i].Id" />
                            <select asp-for="SaleDetails[@i].ProductId"
                                    class="form-select product-select"
                                    asp-items="ViewBag.ProductList">
                                <option value="">-- Producto --</option>
                            </select>
                        </td>
                        <td>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="bi bi-bag"></i>
                                </span>
                                <input asp-for="SaleDetails[@i].Quantity"
                                       type="number" min="1"
                                       class="form-control quantity-input" />
                            </div>
                            <span asp-validation-for="SaleDetails[@i].Quantity"
                                  class="text-danger small"></span>
                        </td>

                        <td>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input asp-for="SaleDetails[@i].UnitPrice"
                                       type="number" step="0.01"
                                       class="form-control price-input"
                                       readonly />
                            </div>
                        </td>
                        <td class="subtotal-cell text-center fw-semibold">
                            @Model.SaleDetails[i].Subtotal?.ToString("C", System.Globalization.CultureInfo.CreateSpecificCulture("es-CO"))
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger btn-sm removeDetail">X</button>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="3" class="text-end"><strong>Total:</strong></td>
                    <td id="totalCell">
                        @Model.Total.ToString("C", System.Globalization.CultureInfo.CreateSpecificCulture("es-CO"))
                    </td>
                    <td></td>
                </tr>
            </tfoot>
        </table>
    </div>

    <button type="submit" class="btn gradient-bg text-white mb-5"><i class="bi bi-cart-plus-fill pe-2"></i>Guardar cambios</button>
</form>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const products = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ProductsJson));

            function findProductPrice(id) {
                const p = products.find(x => x.Id == id);
                return p ? p.Price : 0;
            }

            function updateSubtotal(row) {
                const qty = parseFloat(row.querySelector('.quantity-input').value) || 0;
                const price = parseFloat(row.querySelector('.price-input').value) || 0;
                const sub = qty * price;
                row.querySelector('.subtotal-cell').textContent = new Intl.NumberFormat('es-CO',{style:'currency',currency:'COP'}).format(sub);
                updateTotal();
            }

            function updateTotal() {
                let total = 0;
                document.querySelectorAll('#detailsTable tbody tr').forEach(r => {
                    const txt = r.querySelector('.subtotal-cell').textContent.replace(/[^0-9,-]+/g,'').replace(',','.');
                    total += parseFloat(txt) || 0;
                });
                document.getElementById('totalCell').textContent = new Intl.NumberFormat('es-CO',{style:'currency',currency:'COP'}).format(total);
            }

            function onProductChange(e) {
                const selectedId = e.target.value;
                const allSelects = document.querySelectorAll('.product-select');
                let count = 0;
                allSelects.forEach(s => { if (s.value === selectedId) count++; });
                if (count > 1) {
                    alert('Ya agregaste este producto.');
                    e.target.value = '';
                    return;
                }
                const row = e.target.closest('tr');
                row.querySelector('.price-input').value = findProductPrice(selectedId).toFixed(2);
                updateSubtotal(row);
            }

            function onQuantityChange(e) {
                updateSubtotal(e.target.closest('tr'));
            }

            function addDetailRow() {
                const tbody = document.querySelector('#detailsTable tbody');
                const i = tbody.children.length;
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>
                        <select name="SaleDetails[${i}].ProductId" class="form-select product-select">
                            <option value="">-- Producto --</option>
                            ${products.map(p=>`<option value="${p.Id}">${p.Name}</option>`).join('')}
                        </select>
                    </td>
                    <td><input name="SaleDetails[${i}].Quantity" type="number" min="1" value="1" class="form-control quantity-input"/></td>
                    <td><div class="input-group"><span class="input-group-text">$</span>
                        <input name="SaleDetails[${i}].UnitPrice" type="number" step="0.01" value="0.00" class="form-control price-input" readonly/></div></td>
                    <td class="subtotal-cell text-center fw-semibold">$0.00</td>
                    <td><button type="button" class="btn btn-outline-danger btn-sm removeDetail">X</button></td>
                `;
                tbody.appendChild(tr);
                tr.querySelector('.product-select').addEventListener('change', onProductChange);
                tr.querySelector('.quantity-input').addEventListener('input', onQuantityChange);
                tr.querySelector('.removeDetail').addEventListener('click', e=>{ e.target.closest('tr').remove(); updateTotal(); });
            }

            document.getElementById('addDetail').addEventListener('click', addDetailRow);
            document.querySelectorAll('.product-select').forEach(s => s.addEventListener('change', onProductChange));
            document.querySelectorAll('.quantity-input').forEach(i => i.addEventListener('input', onQuantityChange));
            document.querySelectorAll('.removeDetail').forEach(b => b.addEventListener('click', e=>{ e.target.closest('tr').remove(); updateTotal(); }));

            updateTotal();
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
