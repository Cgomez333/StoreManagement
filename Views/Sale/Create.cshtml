@model StoreManagement.Models.Sale

@{
    ViewData["Title"] = "Crear Venta";
}

<div class="mb-5">
    <h1 class="mb-4">Crear Venta</h1>

    <form asp-action="Create" method="post" id="saleForm">
        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

        <!-- Card: Información de la Venta -->
        <div class="card mb-4 shadow-sm">
            <div class="card-header bg-light">
                <strong>Información de la Venta</strong>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label asp-for="Date" class="form-label">Fecha</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-calendar2-day"></i></span>
                            <input asp-for="Date" type="date" class="form-control" value="@DateTime.Now:yyyy-MM-dd" />
                        </div>
                        <span asp-validation-for="Date" class="text-danger small"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="CustomerId" class="form-label">Cliente</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-person-badge"></i></span>
                            <select asp-for="CustomerId" class="form-select" asp-items="ViewBag.CustomerId">
                                <option value="">-- Seleccione un cliente --</option>
                            </select>
                        </div>
                        <span asp-validation-for="CustomerId" class="text-danger small"></span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Card: Detalles de Venta -->
        <div class="card shadow-sm">
            <div class="card-header bg-light">
                <strong>Detalles de Venta</strong>
                <small class="text-muted d-block">Agrega productos, cantidades y ajusta precios</small>
            </div>
            <div class="card-body p-0">
                <table class="table table-hover table-striped align-middle mb-0" id="detailsTable">
                    <thead class="table-light">
                        <tr>
                            <th>Producto</th>
                            <th class="text-center">Cantidad</th>
                            <th class="text-center">Precio Unitario</th>
                            <th class="text-center">Subtotal</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.SaleDetails.Count; i++)
                        {
                            <tr>
                                <td>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-box-seam"></i></span>
                                        <select asp-for="SaleDetails[@i].ProductId"
                                                class="form-select product-select"
                                                asp-items="ViewBag.ProductList">
                                            <option value="">-- Producto --</option>
                                        </select>
                                    </div>
                                </td>
                                <td class="text-center">
                                    <div class="input-group justify-content-center">
                                        <span class="input-group-text"><i class="bi bi-bag"></i></span>
                                        <input asp-for="SaleDetails[@i].Quantity"
                                               type="number" min="1"
                                               class="form-control form-control-sm quantity-input" />
                                    </div>
                                </td>
                                <td class="text-center">
                                    <div class="input-group justify-content-center">
                                        <span class="input-group-text">$</span>
                                        <input asp-for="SaleDetails[@i].UnitPrice"
                                               type="number" step="0.01"
                                               class="form-control form-control-sm price-input" readonly />
                                    </div>
                                </td>
                                <td class="subtotal-cell text-center fw-semibold">
                                    @Model.SaleDetails[i].Subtotal.GetValueOrDefault()
                                    .ToString("C", System.Globalization.CultureInfo.CreateSpecificCulture("es-CO"))
                                </td>
                                <td class="text-center">
                                    <button type="button" class="btn btn-outline-danger btn-sm removeDetail">
                                        <i class="bi bi-x-lg"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot class="table-secondary">
                        <tr>
                            <td colspan="3" class="text-end fw-semibold">Total</td>
                            <td id="totalCell" class="text-center fw-bold">
                                @Model.Total.ToString("C", System.Globalization.CultureInfo.CreateSpecificCulture("es-CO"))
                            </td>
                            <td></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
            <div class="card-footer bg-white text-end">
                <button type="button" id="addDetail" class="btn btn-sm btn-outline-primary">
                    Agregar producto
                </button>
            </div>
        </div>

        <div class="text-end mt-4">
            <button type="submit" class="btn gradient-bg text-white btn-lg">
                Guardar Venta
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const products = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ProductsJson));

            function findProductPrice(id) {
                const p = products.find(x => x.Id == id);
                return p ? p.Price : 0;
            }

            function updateSubtotal(row) {
                const qty = parseFloat(row.querySelector('.quantity-input').value) || 0;
                const price = parseFloat(row.querySelector('.price-input').value) || 0;
                const sub = qty * price;
                row.querySelector('.subtotal-cell').textContent =
                    new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP' }).format(sub);
                updateTotal();
            }

            function updateTotal() {
                let t = 0;
                document.querySelectorAll('#detailsTable tbody tr').forEach(r => {
                    const txt = r.querySelector('.subtotal-cell').textContent
                                  .replace(/[^0-9,-]+/g, '').replace(',', '.');
                    t += parseFloat(txt) || 0;
                });
                document.getElementById('totalCell').textContent =
                    new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP' }).format(t);
            }

            function onProductChange(e) {
                const sel = e.target;
                const id = sel.value;
                const row = sel.closest('tr');

                if ([...document.querySelectorAll('.product-select')]
                    .filter(s => s.value === id).length > 1) {
                    alert('¡Este producto ya está agregado!');
                    sel.value = '';
                    return;
                }

                row.querySelector('.price-input').value = findProductPrice(id).toFixed(2);
                updateSubtotal(row);
            }

            function onQuantityChange(e) {
                updateSubtotal(e.target.closest('tr'));
            }

            function addDetailRow() {
                const tbody = document.querySelector('#detailsTable tbody');
                const i = tbody.children.length;
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-box-seam"></i></span>
                            <select name="SaleDetails[${i}].ProductId" class="form-select product-select">
                                <option value="">-- Producto --</option>
                                ${products.map(p => `<option value="${p.Id}">${p.Name}</option>`).join('')}
                            </select>
                        </div>
                    </td>
                    <td class="text-center">
                        <div class="input-group justify-content-center">
                            <span class="input-group-text"><i class="bi bi-bag"></i></span>
                            <input name="SaleDetails[${i}].Quantity" type="number" min="1" value="1"
                                   class="form-control form-control-sm quantity-input" />
                        </div>
                    </td>
                    <td class="text-center">
                        <div class="input-group justify-content-center">
                            <span class="input-group-text">$</span>
                            <input name="SaleDetails[${i}].UnitPrice" type="number" step="0.01" value="0.00"
                                   class="form-control form-control-sm price-input" readonly />
                        </div>
                    </td>
                    <td class="subtotal-cell text-center fw-semibold">$0.00</td>
                    <td class="text-center">
                        <button type="button" class="btn btn-outline-danger btn-sm removeDetail">
                            <i class="bi bi-x-lg"></i>
                        </button>
                    </td>`;
                tbody.appendChild(tr);
                tr.querySelector('.product-select').addEventListener('change', onProductChange);
                tr.querySelector('.quantity-input').addEventListener('input', onQuantityChange);
                tr.querySelector('.removeDetail').addEventListener('click', e => {
                    e.target.closest('tr').remove();
                    updateTotal();
                });
            }

            document.getElementById('addDetail').addEventListener('click', addDetailRow);
            document.querySelectorAll('.product-select').forEach(s => s.addEventListener('change', onProductChange));
            document.querySelectorAll('.quantity-input').forEach(i => i.addEventListener('input', onQuantityChange));
            document.querySelectorAll('.removeDetail').forEach(b => b.addEventListener('click', e => {
                e.target.closest('tr').remove();
                updateTotal();
            }));

            updateTotal();
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
